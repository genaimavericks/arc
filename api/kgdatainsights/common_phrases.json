{
  "keywords": {
    "match": {
      "description": "Match nodes in the graph",
      "examples": [
        "MATCH (n:Node)",
        "MATCH (n:Node)-[r:RELATIONSHIP]->(m:Node)",
        "MATCH p=(n:Node)-[*1..3]->(m:Node)"
      ]
    },
    "where": {
      "description": "Filter results",
      "examples": [
        "WHERE n.property = 'value'",
        "WHERE n.property > 10",
        "WHERE n.property CONTAINS 'text'"
      ]
    },
    "return": {
      "description": "Return results",
      "examples": [
        "RETURN n",
        "RETURN n.property, count(m)",
        "RETURN DISTINCT n.property"
      ]
    },
    "order_by": {
      "description": "Sort results",
      "examples": [
        "ORDER BY n.property",
        "ORDER BY n.property DESC",
        "ORDER BY n.property1, n.property2 DESC"
      ]
    },
    "limit": {
      "description": "Limit number of results",
      "examples": [
        "LIMIT 10",
        "LIMIT 100"
      ]
    },
    "skip": {
      "description": "Skip results",
      "examples": [
        "SKIP 10",
        "SKIP 10 LIMIT 10"
      ]
    },
    "with": {
      "description": "Pass results to next part of query",
      "examples": [
        "WITH n",
        "WITH n, count(m) AS count",
        "WITH n ORDER BY n.property"
      ]
    },
    "create": {
      "description": "Create nodes and relationships",
      "examples": [
        "CREATE (n:Node {property: 'value'})",
        "CREATE (n)-[r:RELATIONSHIP]->(m)"
      ]
    },
    "merge": {
      "description": "Create or match nodes and relationships",
      "examples": [
        "MERGE (n:Node {property: 'value'})",
        "MERGE (n)-[r:RELATIONSHIP]->(m)"
      ]
    },
    "set": {
      "description": "Set properties",
      "examples": [
        "SET n.property = 'value'",
        "SET n.property1 = 'value1', n.property2 = 'value2'"
      ]
    },
    "delete": {
      "description": "Delete nodes and relationships",
      "examples": [
        "DELETE n",
        "DELETE n, r, m"
      ]
    },
    "remove": {
      "description": "Remove properties and labels",
      "examples": [
        "REMOVE n.property",
        "REMOVE n:Label"
      ]
    }
  },
  "common_phrases": {
    "find_all": {
      "description": "Find all nodes of a type",
      "template": "MATCH (n:{node_label}) RETURN n LIMIT 10"
    },
    "find_by_property": {
      "description": "Find nodes by property value",
      "template": "MATCH (n:{node_label}) WHERE n.{property} = '{value}' RETURN n"
    },
    "count_nodes": {
      "description": "Count nodes of a type",
      "template": "MATCH (n:{node_label}) RETURN count(n)"
    },
    "find_related": {
      "description": "Find nodes related to another node",
      "template": "MATCH (n:{node_label})-[r:{relationship_type}]->(m:{target_label}) WHERE n.{property} = '{value}' RETURN m"
    },
    "find_path": {
      "description": "Find path between two nodes",
      "template": "MATCH p=(n:{node_label})-[*1..3]->(m:{target_label}) WHERE n.{property1} = '{value1}' AND m.{property2} = '{value2}' RETURN p"
    },
    "aggregate": {
      "description": "Aggregate data",
      "template": "MATCH (n:{node_label}) RETURN n.{property}, count(*) ORDER BY count(*) DESC LIMIT 10"
    }
  },
  "domain_specific": {
    "manufacturing": {
      "find_machines": {
        "description": "Find all machines",
        "template": "MATCH (m:Machine) RETURN m LIMIT 10"
      },
      "find_batches": {
        "description": "Find all batches",
        "template": "MATCH (b:Batch) RETURN b LIMIT 10"
      },
      "find_machine_batches": {
        "description": "Find batches processed by a machine",
        "template": "MATCH (m:Machine)-[:PROCESSED]->(b:Batch) WHERE m.name = '{machine_name}' RETURN b"
      },
      "find_batch_defects": {
        "description": "Find defects in a batch",
        "template": "MATCH (b:Batch)-[:HAS_DEFECT]->(d:Defect) WHERE b.id = '{batch_id}' RETURN d"
      },
      "find_location_machines": {
        "description": "Find machines at a location",
        "template": "MATCH (l:Location)<-[:LOCATED_AT]-(m:Machine) WHERE l.name = '{location_name}' RETURN m"
      }
    }
  }
}
